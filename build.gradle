// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        feedName = project.hasProperty('feedName') ? project.feedName : 'libs'
        feedUrl = project.hasProperty('feedUrl') ? project.feedUrl :
                'https://gitlab.com/api/v4/projects/28530444/packages/maven'
        tokenName = project.hasProperty('tokenName') ? project.tokenName :
                'Private-Token'
        token = project.hasProperty('token') ? project.token : gitLabPrivateToken
    }

    repositories {
        google()
        jcenter()
        maven {
            url feedUrl
            name feedName
            credentials(HttpHeaderCredentials) {
                name = tokenName
                // the variable resides in ~/.gradle/gradle.properties
                value = token
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    ext {
        feedName = project.hasProperty('feedName') ? project.feedName : 'libs'
        feedUrl = project.hasProperty('feedUrl') ? project.feedUrl :
                'https://gitlab.com/api/v4/projects/28530444/packages/maven'
        tokenName = project.hasProperty('tokenName') ? project.tokenName :
                'Private-Token'
        token = project.hasProperty('token') ? project.token : gitLabPrivateToken
    }

    repositories {
        google()
        jcenter()
        maven {
            url feedUrl
            name feedName
            credentials(HttpHeaderCredentials) {
                name = tokenName
                // the variable resides in ~/.gradle/gradle.properties
                value = token
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}